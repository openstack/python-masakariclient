[tox]
minversion = 3.1.1
envlist = pep8,py3
ignore_basepython_conflict = True

[testenv]
basepython = python3
usedevelop = True
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands =
  stestr run {posargs}
passenv = HTTP_PROXY, HTTPS_PROXY, NO_PROXY, OS_DEBUG, GENERATE_HASHES

[testenv:linters]
skip_install = True
deps =
  {[testenv:pep8]deps}
  {[testenv:bandit]deps}
commands =
  {[testenv:pep8]commands}
  {[testenv:bandit]commands}

[testenv:pep8]
skip_install = True
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
  hacking
commands =
  flake8 {posargs}

[testenv:bandit]
skip_install = True
deps =
   -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
   bandit
commands =
  bandit -r masakariclient

[testenv:venv]
commands = {posargs}

[testenv:cover]
setenv =
    PYTHON=coverage run --source masakariclient --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:docs]
deps = -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -W -b html doc/source doc/build/html

[testenv:releasenotes]
skip_install = True
deps = -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
       -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:debug]
commands = oslo_debug_helper {posargs}

[flake8]
# E123, E125 skipped as they are invalid PEP-8.
# W504 line break after binary operator
show-source = True
ignore = E123,E125,W504
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build
